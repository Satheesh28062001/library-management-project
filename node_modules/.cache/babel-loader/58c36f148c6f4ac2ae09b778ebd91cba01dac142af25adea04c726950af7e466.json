{"ast":null,"code":"var _jsxFileName = \"D:\\\\webtech\\\\ReactOnly\\\\librarybooks\\\\src\\\\Components\\\\UsersLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UsersLogin = () => {\n  _s();\n  let userEmail = useRef();\n  let userPass = useRef();\n  let navigate = useNavigate();\n  let [userData, setUserData] = useState([]);\n  useEffect(() => {\n    let fetchUserApi = async () => {\n      let resp = await fetch('http://localhost:4000/users');\n      let data = await resp.json();\n      setUserData(data);\n    };\n    fetchUserApi();\n  }, [userData]);\n\n  //! Collecting mail from user api\n  let allUsersEmail = userData.map(e => e.email);\n\n  //!Collecting input data from the end user\n  let valEmail = userEmail.current;\n  let valPass = userPass.current;\n  let handleSubmit = e => {\n    e.preventDefault();\n    //console.log(valEmail.value,valPass.value)\n\n    let email = allUsersEmail.includes(valEmail.value);\n    let Password = valPass.value === 'Satheesh123';\n    //console.log(email,Password)\n\n    if (email && Password) {\n      navigate('/userportal');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: userEmail,\n        type: \"text\",\n        placeholder: \"Enter Mail-Id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: userPass,\n        type: \"text\",\n        placeholder: \"Enter Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"User Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(UsersLogin, \"4IF6Hy1ix2HeAaYVdrYk15FkSPY=\", false, function () {\n  return [useNavigate];\n});\n_c = UsersLogin;\nexport default UsersLogin;\nvar _c;\n$RefreshReg$(_c, \"UsersLogin\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","UsersLogin","_s","userEmail","userPass","navigate","userData","setUserData","fetchUserApi","resp","fetch","data","json","allUsersEmail","map","e","email","valEmail","current","valPass","handleSubmit","preventDefault","includes","value","Password","children","action","onSubmit","ref","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/webtech/ReactOnly/librarybooks/src/Components/UsersLogin.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst UsersLogin = () => {\r\n  let userEmail=useRef()\r\n let userPass=useRef()\r\n let navigate=useNavigate()\r\n \r\n  let[userData,setUserData]=useState([])\r\n \r\n useEffect(()=>{\r\n  let fetchUserApi=async()=>{\r\n    let resp= await fetch('http://localhost:4000/users')\r\n    let data=await resp.json()\r\n    setUserData(data)\r\n    \r\n   }\r\n   \r\n   fetchUserApi()\r\n\r\n },[userData])\r\n\r\n //! Collecting mail from user api\r\n let allUsersEmail=userData.map(e=>e.email)\r\n \r\n //!Collecting input data from the end user\r\n let valEmail=userEmail.current\r\n  let valPass=userPass.current\r\n\r\n  let handleSubmit=(e)=>{\r\n    e.preventDefault()\r\n    //console.log(valEmail.value,valPass.value)\r\n\r\n    let email=allUsersEmail.includes(valEmail.value)\r\n    let Password=(valPass.value==='Satheesh123')\r\n    //console.log(email,Password)\r\n\r\n    if(email && Password)\r\n      {\r\n        navigate('/userportal')\r\n\r\n      }\r\n   \r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n \r\n\r\n\r\n\r\n  return (\r\n   <>\r\n    <form action=\"\" onSubmit={handleSubmit}>\r\n        <input ref={userEmail} type=\"text\" placeholder='Enter Mail-Id' />\r\n        <input ref={userPass} type=\"text\" placeholder='Enter Password' />\r\n        <button>User Login</button>\r\n    </form></>\r\n  )\r\n}\r\n\r\nexport default UsersLogin\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,IAAIC,SAAS,GAACT,MAAM,CAAC,CAAC;EACvB,IAAIU,QAAQ,GAACV,MAAM,CAAC,CAAC;EACrB,IAAIW,QAAQ,GAACT,WAAW,CAAC,CAAC;EAEzB,IAAG,CAACU,QAAQ,EAACC,WAAW,CAAC,GAACZ,QAAQ,CAAC,EAAE,CAAC;EAEvCF,SAAS,CAAC,MAAI;IACb,IAAIe,YAAY,GAAC,MAAAA,CAAA,KAAS;MACxB,IAAIC,IAAI,GAAE,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MACpD,IAAIC,IAAI,GAAC,MAAMF,IAAI,CAACG,IAAI,CAAC,CAAC;MAC1BL,WAAW,CAACI,IAAI,CAAC;IAElB,CAAC;IAEDH,YAAY,CAAC,CAAC;EAEhB,CAAC,EAAC,CAACF,QAAQ,CAAC,CAAC;;EAEb;EACA,IAAIO,aAAa,GAACP,QAAQ,CAACQ,GAAG,CAACC,CAAC,IAAEA,CAAC,CAACC,KAAK,CAAC;;EAE1C;EACA,IAAIC,QAAQ,GAACd,SAAS,CAACe,OAAO;EAC7B,IAAIC,OAAO,GAACf,QAAQ,CAACc,OAAO;EAE5B,IAAIE,YAAY,GAAEL,CAAC,IAAG;IACpBA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB;;IAEA,IAAIL,KAAK,GAACH,aAAa,CAACS,QAAQ,CAACL,QAAQ,CAACM,KAAK,CAAC;IAChD,IAAIC,QAAQ,GAAEL,OAAO,CAACI,KAAK,KAAG,aAAc;IAC5C;;IAEA,IAAGP,KAAK,IAAIQ,QAAQ,EAClB;MACEnB,QAAQ,CAAC,aAAa,CAAC;IAEzB;EAGJ,CAAC;EAeD,oBACCP,OAAA,CAAAE,SAAA;IAAAyB,QAAA,eACC3B,OAAA;MAAM4B,MAAM,EAAC,EAAE;MAACC,QAAQ,EAAEP,YAAa;MAAAK,QAAA,gBACnC3B,OAAA;QAAO8B,GAAG,EAAEzB,SAAU;QAAC0B,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjEpC,OAAA;QAAO8B,GAAG,EAAExB,QAAS;QAACyB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjEpC,OAAA;QAAA2B,QAAA,EAAQ;MAAU;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC,gBAAE,CAAC;AAEd,CAAC;AAAAhC,EAAA,CAhEKD,UAAU;EAAA,QAGFL,WAAW;AAAA;AAAAuC,EAAA,GAHnBlC,UAAU;AAkEhB,eAAeA,UAAU;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}