{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport '../Style/readbooks.css';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReadBooks = () => {\n  _s();\n  let params = useParams();\n  let bookId = params.id;\n  let [book, setBook] = useState({});\n  useEffect(() => {\n    let fetchBookApi = async () => {\n      let url = await fetch(`http://localhost:4000/books/${bookId}`);\n      let resp = await url.json();\n      setBook(resp);\n    };\n    fetchBookApi();\n  }, [book]);\n  let {\n    id,\n    title,\n    pageCount,\n    thumbnailUrl,\n    shortDescription,\n    longDescription,\n    status,\n    authors,\n    categories\n  } = book;\n  let [para, setpara] = useState(true);\n  let togglepara = () => {\n    setpara(!para);\n  };\n  let [para1, setPara1] = useState(true);\n  let togglepara1 = () => {\n    setPara1(!para1);\n  };\n  let navigate = useNavigate();\n  let loc = useLocation();\n  let path = loc.pathname.startsWith('/adminportal');\n  let previous = () => {\n    path ? navigate(`/adminportal/books`) : navigate(`/userportal/books`);\n  };\n  let addcart = (id, title, authors, thumbnailUrl) => {\n    let cartobj = {\n      cardid: id,\n      carttitle: title,\n      cartauthor: [authors],\n      cartimage: thumbnailUrl\n    };\n    let duplicate = id.includes(id);\n    if (duplicate) {\n      alert(`${title} already add to cart`);\n    } else {\n      fetch(`http://localhost:4000/cart`, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(cartobj)\n      });\n      alert(`${title} add to cart`);\n      navigate('/userportal/cart');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(ReadBooks, \"1fDLmneKK98gHwjrVAFLnIgUGco=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c = ReadBooks;\nexport default ReadBooks;\nvar _c;\n$RefreshReg$(_c, \"ReadBooks\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","useParams","ExpandLessIcon","ExpandMoreIcon","Fragment","_Fragment","jsxDEV","_jsxDEV","ReadBooks","_s","params","bookId","id","book","setBook","fetchBookApi","url","fetch","resp","json","title","pageCount","thumbnailUrl","shortDescription","longDescription","status","authors","categories","para","setpara","togglepara","para1","setPara1","togglepara1","navigate","loc","path","pathname","startsWith","previous","addcart","cartobj","cardid","carttitle","cartauthor","cartimage","duplicate","includes","alert","method","headers","body","JSON","stringify","_c","$RefreshReg$"],"sources":["D:/webtech/ReactOnly/librarybooks/src/Components/ReadBooks.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom'\r\nimport '../Style/readbooks.css'\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nconst ReadBooks = () => {\r\n    let params=useParams()\r\n    let bookId=params.id\r\n    let[book,setBook]=useState({})\r\n    useEffect(()=>{\r\n        let fetchBookApi=async()=>{\r\n            let url=await fetch(`http://localhost:4000/books/${bookId}`)\r\n            let resp=await url.json();\r\n            setBook(resp)\r\n            \r\n         };\r\n         fetchBookApi()\r\n    },[book]);\r\n    \r\n    let{id,title,pageCount,thumbnailUrl,shortDescription,longDescription,status,authors,categories}=book\r\n    \r\n  \r\n        \r\n        let[para,setpara]=useState(true)\r\n        let togglepara=()=>{\r\n            setpara(!para)\r\n        }\r\n        let[para1,setPara1]=useState(true)\r\n        let togglepara1=()=>{\r\n            setPara1(!para1)\r\n            \r\n\r\n        }\r\n        let navigate=useNavigate()\r\n        \r\n        let loc=useLocation()\r\n        let path=loc.pathname.startsWith('/adminportal')\r\n        let previous=()=>{\r\n            path ?\r\n            navigate(`/adminportal/books`)\r\n            :\r\n            navigate(`/userportal/books`)\r\n\r\n        }\r\n        let addcart=(id,title,authors,thumbnailUrl)=>{\r\n            let cartobj={\r\n                cardid:id,\r\n                carttitle:title,\r\n                cartauthor:[authors],\r\n                cartimage:thumbnailUrl,\r\n\r\n            }\r\n            let duplicate=id.includes(id)\r\n            if(duplicate){\r\n                alert(`${title} already add to cart`)\r\n            }\r\n            else{\r\n                fetch(`http://localhost:4000/cart`,{\r\n                    method:\"POST\",\r\n                    headers:{\"Content-type\":\"application/json\"},\r\n                    body:JSON.stringify(cartobj)\r\n                })\r\n                alert(`${title} add to cart`)\r\n                navigate('/userportal/cart')\r\n            }\r\n\r\n        }\r\n   \r\n  return (\r\n    <>\r\n    {}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ReadBooks\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}