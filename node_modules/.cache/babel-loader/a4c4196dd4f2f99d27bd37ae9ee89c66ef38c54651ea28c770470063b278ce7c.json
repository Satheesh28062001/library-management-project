{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Books = () => {\n  _s();\n  let [books, setBooks] = useState([]);\n  let fetchApi = async () => {\n    let apiData = await fetch('http://localhost:4000/books').then(resp => resp.json());\n    setBooks(apiData);\n  };\n  fetchApi();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Books, \"MVxqDrb8p9EwL9JgRN0OBnPFfPc=\");\n_c = Books;\nexport default Books;\nvar _c;\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"names":["React","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","Books","_s","books","setBooks","fetchApi","apiData","fetch","then","resp","json","_c","$RefreshReg$"],"sources":["D:/webtech/ReactOnly/librarybooks/src/Components/Books.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Books = () => {\r\n let[books,setBooks]= useState([])\r\n\r\n\r\n\r\n  let fetchApi=async()=>{\r\n    let apiData=await fetch('http://localhost:4000/books')\r\n    .then(resp=>resp.json())\r\n    setBooks(apiData)\r\n  }\r\n  fetchApi()\r\n  return (\r\n   <>\r\n   \r\n   </>\r\n  )\r\n}\r\n\r\nexport default Books\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,IAAG,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAER,QAAQ,CAAC,EAAE,CAAC;EAIhC,IAAIS,QAAQ,GAAC,MAAAA,CAAA,KAAS;IACpB,IAAIC,OAAO,GAAC,MAAMC,KAAK,CAAC,6BAA6B,CAAC,CACrDC,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IACxBN,QAAQ,CAACE,OAAO,CAAC;EACnB,CAAC;EACDD,QAAQ,CAAC,CAAC;EACV,oBACCL,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEN,CAAC;AAAAI,EAAA,CAhBKD,KAAK;AAAAU,EAAA,GAALV,KAAK;AAkBX,eAAeA,KAAK;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}